# name of executable

ELF=$(notdir $(CURDIR)).elf                    
BIN=$(notdir $(CURDIR)).bin

# Tool path

TOOLROOT=/l/arm/codesourcery/bin

# Library path

LIBROOT=/l/arm/STM32F3-Discovery_FW_V1.1.0

# Tools

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as
OBJCOPY=$(TOOLROOT)/arm-none-eabi-objcopy

# Code Paths

DEVICE=$(LIBROOT)/Libraries/CMSIS/Device/ST/STM32F30x
CORE=$(LIBROOT)/Libraries/CMSIS/Include
PERIPH=$(LIBROOT)/Libraries/STM32F30x_StdPeriph_Driver
SYSTEM_FILE=$(LIBROOT)/Libraries/CMSIS/Device/ST/STM32F30x/Source/Templates
STARTUP_FILE=$(LIBROOT)/Libraries/CMSIS/Device/ST/STM32F30x/Source/Templates/gcc_ride7

# Search path for standard files

vpath %.c $(TEMPLATEROOT)

# Search path for perpheral library

vpath %.c $(CORE)
vpath %.c $(PERIPH)/src
vpath %.c $(DEVICE)

vpath %.c $(SYSTEM_FILE)
vpath %.s $(STARTUP_FILE)

#  Processor specific

LDSCRIPT = $(LIBROOT)/Project/Peripheral_Examples/GPIO_IOToggle/TrueSTUDIO/GPIO_IOToggle/STM32_FLASH.ld
STARTUP = startup_stm32f30x.o system_stm32f30x.o

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m4
CFLAGS+= -mcpu=cortex-m4 -mthumb 
CFLAGS+= -I$(TEMPLATEROOT) -I$(DEVICE) -I$(CORE) -I$(PERIPH)/inc -I.
CFLAGS+= -DUSE_STDPERIPH_DRIVER $(FULLASSERT) 
CFLAGS+= -I$(DEVICE)/Include -I$(CORE)
CFLAGS+= -I$(LIBROOT)/Project/Peripheral_Examples/GPIO_IOToggle

# Build executable 

$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

%.bin: %.elf
	$(OBJCOPY) -O binary $< $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) startup_stm32f* $(CLEANOTHER)

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)

flash: $(BIN)
	st-flash write $(BIN) 0x8000000

# pull in dependencies

-include $(OBJS:.o=.d)




